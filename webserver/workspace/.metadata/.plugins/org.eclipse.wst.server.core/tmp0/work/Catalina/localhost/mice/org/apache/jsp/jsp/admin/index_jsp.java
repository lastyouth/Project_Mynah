/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2015-08-19 14:12:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");

      out.write('\r');
      out.write('\n');

	String root_path = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("\t<link href=\"../../css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<link href=\"../../css/navbar-fixed-top.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<link href=\"../../css/bootstrap-table.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<link href='../../css/bootstrap-theme.min.css' rel='stylesheet' />\r\n");
      out.write("\r\n");
      out.write("\t<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>\r\n");
      out.write("\t<script src=\"../../js/bootstrap.min.js\"></script>\r\n");
      out.write("\t<script src=\"../../js/bootstrap-table.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\r\n");
      out.write("\t<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\r\n");
      out.write("\t<!--[if lt IE 9]>\r\n");
      out.write("    <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\r\n");
      out.write("    <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\r\n");
      out.write("    <![endif]-->\r\n");
      out.write("\t<title>::MICE::</title>\r\n");
      out.write("\t<!-- Bootstrap -->\r\n");
      out.write("\t<link href=\"../../css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<link href=\"../../css/kfonts2.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("\t<script language=\"JavaScript\">\r\n");
      out.write("\t<!--\r\n");
      out.write("\t\tfunction MM_preloadImages() { //v3.0\r\n");
      out.write("\t\t\tvar d = document;\r\n");
      out.write("\t\t\tif (d.images) {\r\n");
      out.write("\t\t\t\tif (!d.MM_p)\r\n");
      out.write("\t\t\t\t\td.MM_p = new Array();\r\n");
      out.write("\t\t\t\tvar i, j = d.MM_p.length, a = MM_preloadImages.arguments;\r\n");
      out.write("\t\t\t\tfor (i = 0; i < a.length; i++)\r\n");
      out.write("\t\t\t\t\tif (a[i].indexOf(\"#\") != 0) {\r\n");
      out.write("\t\t\t\t\t\td.MM_p[j] = new Image;\r\n");
      out.write("\t\t\t\t\t\td.MM_p[j++].src = a[i];\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t//-->\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script language=\"javascript\">\r\n");
      out.write("\t<!--\r\n");
      out.write("\t\tfunction goLogin() {\r\n");
      out.write("\t\r\n");
      out.write("\t\t\tif (document.login.adminId.value == \"\") {\r\n");
      out.write("\t\t\t\talert(\"아이디를 입력하세요.\");\r\n");
      out.write("\t\t\t\tdocument.login.adminId.focus();\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t\tif (document.login.adminPass.value == \"\") {\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("\t\t\t\tdocument.login.adminPass.focus();\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t\tdocument.login.action = \"login_proc.jsp\";\r\n");
      out.write("\t\t\tdocument.login.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t//-->\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<form name=\"login\" method=\"post\">\r\n");
      out.write("\t\t<!--전체 -->\r\n");
      out.write("\t\t<div class=\"container\" style=\"margin-top: 100px; max-width: 600px;\">\r\n");
      out.write("\t\t\t<!--login -->\r\n");
      out.write("\t\t\t<span style=\"text-align: center;\"><h1>MICE Admin Page</h1></span>\r\n");
      out.write("\t\t\t<br></br>\r\n");
      out.write("\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t<span class=\"input-group-addon\"> <span\r\n");
      out.write("\t\t\t\t\tclass=\"glyphicon glyphicon-user\"> </span>\r\n");
      out.write("\t\t\t\t</span> <input name=\"adminId\" type=\"text\" class=\"form-control\" id=\"adminId\"\r\n");
      out.write("\t\t\t\t\ttabindex=1 placeholder=\"아이디\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t<span class=\"input-group-addon\"> <span\r\n");
      out.write("\t\t\t\t\tclass=\"glyphicon glyphicon-lock\"></span>\r\n");
      out.write("\t\t\t\t</span> <input name=\"adminPass\" type=\"password\" class=\"form-control\"\r\n");
      out.write("\t\t\t\t\tid=\"adminPass\" onKeypress=\"if (event.keyCode==13) goLogin();\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"암 호\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<button type=\"button\" style=\"float: right;\" class=\"btn btn-default\" onClick=\"goLogin();\">로그인 </button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!--//login -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!--//전체 -->\r\n");
      out.write("\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

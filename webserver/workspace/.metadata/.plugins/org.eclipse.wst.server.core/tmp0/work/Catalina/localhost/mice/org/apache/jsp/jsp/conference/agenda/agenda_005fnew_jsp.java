/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2015-08-19 13:32:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.conference.agenda;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import sips.common.lib.util.*;
import sips.common.lib.value.*;
import sips.dept.menu.*;
import sips.common.lib.util.*;
import sips.common.lib.value.*;
import sips.dept.contents.*;
import sips.dept.menu.*;

public final class agenda_005fnew_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("sips.common.lib.util");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("sips.common.lib.value");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("sips.dept.contents");
    _jspx_imports_packages.add("sips.dept.menu");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write(' ');
      out.write('\r');
      out.write('\n');

	String root_path = request.getContextPath();

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

/*////////////////세션 관리/////////////////////////*/
//String _authority   = (String)session.getAttribute("USE_AUTHORITY");
if ((String)session.getAttribute("USE_AUTHORITY")  ==  null){
	out.println("<script language='javascript'>alert('권한이 없습니다.');location = '/mice/jsp/conference/index.jsp';</script>");
}
/*////////////////세션 관리//////////////////////////*/
	

	ParamValue      menuParam  = new ParamValue();   
 
	String menu_link_url = "";
    String b_mode       = StringUtil.defaultIfEmpty(request.getParameter("b_mode"),"");   
    String conference_id       = (String)session.getAttribute("CONFERENCE_ID");   
    
    if (b_mode == null || "".equals(b_mode) || b_mode.equals("L"))
    	menu_link_url = "/jsp/conference/agenda/agenda_list.jsp";
    else  if (b_mode.equals("R"))
    	menu_link_url = "/jsp/conference/agenda/agenda_read.jsp";
    
    String menu_name       = "행사조회(아젠다)";
    
    ParamValue       parmValue = new ParamValue();        
	Agenda            agenda     = new Agenda();  
	Session            _session     = new Session();
	Topic            topic     = new Topic();
	Conference        conference     = new Conference();
    ResultSetValue   rset      = null;
    ResultSetValue   rset3      = null;
    ResultSetValue   rset4      = null;
    
    /* 페이지 관련 파라미터 */
    //String b_mode             = StringUtil.defaultIfEmpty(request.getParameter("b_mode"      ), ""); 
    String old_conference_id       = StringUtil.defaultIfEmpty(request.getParameter("conference_id"),"0");   
    String session_id       = StringUtil.defaultIfEmpty(request.getParameter("session_id"),"0");     
    String topic_id       = StringUtil.defaultIfEmpty(request.getParameter("topic_id"),"0");   
    
    String user_cd         = (String)session.getAttribute("USER_CD");
    String user_authority         = (String)session.getAttribute("USE_AUTHORITY");
    int    totalCnt  = 0;                        // 총 게시물 갯수
	int    cpage     = (request.getParameter("cpage") == null || "".equals(request.getParameter("cpage"))) ? 0 : Integer.parseInt(request.getParameter("cpage"));   // 현재 페이지
    int    pageSize  = 10;                       // 한 페이지에 들어갈 게시물 갯수
	int    pageTotal = 0;                        // 총 페이지수
	int    listIndex = 0;
	
    String agenda_id             = ""; 

    String binder_title = "";
    String worker_name = "";
    String sel_session_id = "";
    String sel_session_title = "";
    String sel_conference_name = "";
    String sel_conference_id = "";
    String sel_topic_title = "";
    String sel_topic_id = "";
    //String conference_id = "";
    String conference_name = "";
    String session_title = "";
    String topic_title = "";
    String title = "";
    String conference_date    = ""; 
    String reg_date= "";
    String binder_id= "";
    String end_time = "";
    String start_time = "";

    DateUtil  dateUtil   = new DateUtil();

    parmValue.put("CURRENT_PAGE"        , cpage         );       // 페이징에 꼭 필요
    parmValue.put("lineCnt"             , pageSize      );      
    parmValue.put("conference_id"        , old_conference_id  );  
    parmValue.put("session_id"        , session_id  );  
    parmValue.put("topic_id"        , topic_id  );  
    
 // 컨퍼런스 셀렉트 리스트
    parmValue.put("user_cd"        , user_cd  );  
    parmValue.put("user_authority"        , user_authority  );  

    //세션 셀렉트 리스트
    rset3 = _session.getSessionSelectList(parmValue);
    //토픽 셀렉트 리스트
    rset4 = topic.getTopicSelectList(parmValue);

    // 목록
    rset = agenda.getAgendaList(parmValue);
    
    /*============= 2. 페이징 관련 셋팅 ================*/
    totalCnt  = agenda.getAgendaTotalRow(parmValue);          // 총 게시물 갯수
	pageTotal = ((totalCnt-1)/pageSize) ;               // 총 페이지수
	listIndex = totalCnt - (pageSize * (cpage));
     

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("      <title> MICE </title>\r\n");
      out.write("\r\n");
      out.write("      <!-- Bootstrap css -->\r\n");
      out.write("      <link href=\"../../../css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("      <link href=\"../../../css/navbar-fixed-top.css\" rel=\"stylesheet\">\r\n");
      out.write("      <link href=\"../../../css/bootstrap-table.css\" rel=\"stylesheet\">\r\n");
      out.write("      <link href='../../../css/bootstrap-theme.min.css' rel='stylesheet'/>\r\n");
      out.write("      \r\n");
      out.write("      <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\r\n");
      out.write("      <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>\r\n");
      out.write("      <script src=\"../../../js/bootstrap.min.js\"></script>\r\n");
      out.write("      <script src=\"../../../js/bootstrap-table.js\"></script>\r\n");
      out.write("      \r\n");
      out.write("      <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\r\n");
      out.write("      <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\t\r\n");
      out.write("      <!--[if lt IE 9]>\r\n");
      out.write("      <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\r\n");
      out.write("      <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\r\n");
      out.write("      <![endif]-->\r\n");
      out.write("\t<title>::MICE::</title>\r\n");
      out.write("\r\n");
      out.write("<script language=\"JavaScript\" src=\"");
      out.print(root_path);
      out.write("/js/common_conference.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://code.jquery.com/ui/1.8.18/themes/base/jquery-ui.css\" type=\"text/css\" media=\"all\" />\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"http://code.jquery.com/ui/1.8.18/jquery-ui.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(function() {\r\n");
      out.write("  $( \"#datepicker1, #datepicker2\" ).datepicker({\r\n");
      out.write("    dateFormat: 'yy-mm-dd',\r\n");
      out.write("    prevText: '이전 달',\r\n");
      out.write("    nextText: '다음 달',\r\n");
      out.write("    monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'],\r\n");
      out.write("    monthNamesShort: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'],\r\n");
      out.write("    dayNames: ['일','월','화','수','목','금','토'],\r\n");
      out.write("    dayNamesShort: ['일','월','화','수','목','금','토'],\r\n");
      out.write("    dayNamesMin: ['일','월','화','수','목','금','토'],\r\n");
      out.write("    showMonthAfterYear: true,\r\n");
      out.write("    yearSuffix: '년'\r\n");
      out.write("  });\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script language=\"JavaScript\" >\r\n");
      out.write("<!--\r\n");
      out.write("    /* 검색 */\r\n");
      out.write("    function goSearch() {\r\n");
      out.write("        board.searchFlag.value = \"OK\";\r\n");
      out.write("        board.b_mode.value  = \"L\";\r\n");
      out.write("        board.target=\"_self\";\r\n");
      out.write("        board.action = \"");
      out.print( request.getRequestURI() );
      out.write("\";\r\n");
      out.write("        board.submit();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 목록 페이지로 이동 */\r\n");
      out.write("    function goList() {\r\n");
      out.write("        board.b_mode.value       = \"L\";\r\n");
      out.write("\r\n");
      out.write("        board.target=\"_self\";\r\n");
      out.write("        board.action = \"");
      out.print( request.getRequestURI() );
      out.write("\";\r\n");
      out.write("        board.submit();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 쓰기 페이지로 이동 */\r\n");
      out.write("    function goWriteForm() {\r\n");
      out.write("        board.agenda_id.value = \"\";\r\n");
      out.write("        board.target=\"_self\";\r\n");
      out.write("        board.action          = \"");
      out.print( request.getRequestURI() );
      out.write("\";\r\n");
      out.write("        board.b_mode.value = \"W\";\r\n");
      out.write("        board.submit();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 읽기 페이지로 이동 */\r\n");
      out.write("    function goDisplay(agenda_id) {\r\n");
      out.write("        board.agenda_id.value = agenda_id; \r\n");
      out.write("        board.b_mode.value       = \"R\";\r\n");
      out.write("       // board.target             = \"_self\";\r\n");
      out.write("        board.action             = \"");
      out.print( request.getRequestURI() );
      out.write("\";\r\n");
      out.write("        board.submit();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* page 이동 */\r\n");
      out.write("    function goPage( page ) {\r\n");
      out.write("        board.cpage.value     = page;\r\n");
      out.write("        board.b_mode.value = \"L\";\r\n");
      out.write("        board.target=\"_self\";\r\n");
      out.write("        board.action          = \"");
      out.print( request.getRequestURI() );
      out.write("\";\r\n");
      out.write("        board.submit();\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function goDelete(){\r\n");
      out.write("        var frm = document.board;\r\n");
      out.write("        var objs = frm.boxes;\r\n");
      out.write("        var isChk = false;\r\n");
      out.write("    \t for (var i=0; i<objs.length; i++){\r\n");
      out.write("         \tif(objs[i].checked)\r\n");
      out.write("         \t\tisChk = true;\r\n");
      out.write("         }\r\n");
      out.write("         if (!isChk) {\r\n");
      out.write("             alert(\"삭제할 리스트 한개 이상 선택하세요.\");\r\n");
      out.write("             return;\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("         if( confirm(\"선택하신 리스트를 삭제 하시겠습니까?\")) {\r\n");
      out.write("        \t frm.modeType.value = \"lDel\";\r\n");
      out.write("             frm.action   = \"agenda_write_proc.jsp\";\r\n");
      out.write("             frm.submit();\r\n");
      out.write("         }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function conference_change(obj)\r\n");
      out.write("\t{\r\n");
      out.write("        var frm = document.board;\r\n");
      out.write("\t\t//var obj_value = conference_id.value;\r\n");
      out.write("\t\t//alert(obj_value);\r\n");
      out.write("\t\tfrm.target=\"_self\";\r\n");
      out.write("\t\tfrm.action             = \"./agenda.jsp\";\r\n");
      out.write("\t\tfrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("//-->\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   \t\t<!-- Static navbar -->\r\n");
      out.write("\t\t<nav class=\"navbar navbar-default navbar-fixed-top\">\r\n");
      out.write("\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t<div class=\"navbar-header\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t<a class=\"navbar-brand\" href=\"../index.html\">MC</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("        \r\n");
      out.write("\t\t\t\t<div id=\"navbar\" class=\"navbar-collapse collapse\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"active\"><a href=\"#\">아젠다</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"../binder/binder.html\">초록 조회</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">참가자 조회</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">행사장 안내</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">내정보<span class=\"caret\"></span></a>\r\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"dropdown-menu\" role=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#\">메모 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#\">스케줄 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#\">메시지 수신함</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#\">메시지 발신함</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\"><span class=\"glyphicon glyphicon-user\"></span> 회원정보수정</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\"><span class=\"glyphicon glyphicon-log-in\"></span> 로그아웃</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div><!--/.nav-collapse -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</nav><!-- /Static navbar -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t<!-- table -->\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t\t<table class=\"table table-hover\" data-toggle=\"table\"\r\n");
      out.write("\t\t\tdata-search=\"true\" data-show-refresh=\"true\" data-show-toggle=\"true\"\r\n");
      out.write("\t\t\tdata-pagination=\"true\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<th><div align=\"center\">세션 제목</div></th>\r\n");
      out.write("\t\t\t\t<th><div align=\"center\">바인더 제목</div></th>\r\n");
      out.write("\t\t\t\t<th><div align=\"center\">발표일자</div></th>\r\n");
      out.write("\t\t\t\t<th><div align=\"center\">발표시간</div></th>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t");

    if( totalCnt==0 && rset.row()==0) { 
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=7 align=\"center\" height=50>:::: 없음 ::::</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
    
    } else {
        while( rset.next()){
        	binder_title       = StringUtil.defaultIfEmpty(rset.getString("binder_title"   ), ""); 
        	worker_name       = StringUtil.defaultIfEmpty(rset.getString("worker_name"   ), ""); 
        	session_title       = StringUtil.defaultIfEmpty(rset.getString("session_title"   ), ""); 
        	topic_title     = StringUtil.defaultIfEmpty(rset.getString("topic_title" ), "");
        	reg_date     = StringUtil.defaultIfEmpty(rset.getString("reg_date" ), "");
        	conference_date     = StringUtil.defaultIfEmpty(rset.getString("conference_date" ), "");
        	conference_name     = StringUtil.defaultIfEmpty(rset.getString("conference_name" ), "");
        	binder_title     = StringUtil.defaultIfEmpty(rset.getString("binder_title" ), "");
        	agenda_id     = StringUtil.defaultIfEmpty(rset.getString("agenda_id" ), "");
        	start_time     = StringUtil.defaultIfEmpty(rset.getString("start_time" ), "");
        	end_time     = StringUtil.defaultIfEmpty(rset.getString("end_time" ), "");

      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\"><a\r\n");
      out.write("\t\t\t\t\thref=\"javascript:goDisplay('");
      out.print(agenda_id);
      out.write("');\" class=\"skin\"> ");
      out.print(session_title);
      out.write("\r\n");
      out.write("\t\t\t\t</a></td>\r\n");
      out.write("\t\t\t\t<td align=\"center\"><a\r\n");
      out.write("\t\t\t\t\thref=\"javascript:goDisplay('");
      out.print(agenda_id);
      out.write("');\" class=\"skin\"> ");
      out.print(binder_title);
      out.write("\r\n");
      out.write("\t\t\t\t</a></td>\r\n");
      out.write("\t\t\t\t<td align=\"center\"><a\r\n");
      out.write("\t\t\t\t\thref=\"javascript:goDisplay('");
      out.print(agenda_id);
      out.write("');\" class=\"skin\">");
      out.print(conference_date);
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t<td align=\"center\"><a\r\n");
      out.write("\t\t\t\t\thref=\"javascript:goDisplay('");
      out.print(agenda_id);
      out.write("');\" class=\"skin\">");
      out.print( !"".equals(start_time)?start_time.substring(0,2):"");
      out.write(':');
      out.print( !"".equals(start_time)?start_time.substring(2,4):"");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t~ ");
      out.print( !"".equals(end_time)?end_time.substring(0,2):"");
      out.write(':');
      out.print( !"".equals(end_time)?end_time.substring(2,4):"");
      out.write("</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
      } 
    }
    
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><table width=\"100%\" height=\"30\" border=\"0\" cellpadding=\"0\"\r\n");
      out.write("\t\t\t\t\tcellspacing=\"0\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print( cpage + 1 );
      out.write(' ');
      out.write('/');
      out.write(' ');
      out.print( pageTotal + 1 );
      out.write(" page</td>\r\n");
      out.write("\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td width=\"70%\" align=\"center\">");
      out.print( PagingUtil.getDefaultListPageTag(cpage, pageSize, pageTotal) );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"right\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("    </div> <!-- /container -->\r\n");
      out.write("    \r\n");
      out.write("   <body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
